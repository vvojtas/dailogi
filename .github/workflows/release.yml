name: Release CI/CD

on:
  release:
    types: [published]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write # Required to push images to GHCR
  id-token: write # Required for OIDC if used by actions, good to have

env:
  GIT_TAG: ${{ github.ref_name }}
  GHCR_REGISTRY: ghcr.io
  ORG_NAME: vvojtas # Your GitHub organization or username
  REPO_NAME: dailogi # Your GitHub repository name
  SERVER_IMAGE_NAME: dailogi-server
  UI_IMAGE_NAME: dailogi-ui

jobs:
  tests:
    name: Run All Tests
    uses: ./.github/workflows/run-tests.yml
    secrets:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    # inputs: # Pass any inputs run-tests.yml expects, e.g.:
    #   artifact_retention_days: 7

  build-and-push-images:
    name: Build and Push Images
    needs: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: dailogi-server
            context: ./be/dailogi-server
            dockerfile: ./be/dailogi-server/Dockerfile
          - name: dailogi-ui
            context: ./ui
            dockerfile: ./ui/Dockerfile
            build_args: ""
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/${{ matrix.service.name }}
          tags: |
            type=raw,value=${{ env.GIT_TAG }}
            type=sha,prefix=,suffix=,format=short

      - name: Build and push Docker image for ${{ matrix.service.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.service.build_args }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-digitalocean:
    name: Deploy to DigitalOcean App Platform
    needs: build-and-push-images
    runs-on: ubuntu-latest
    environment: prod # Assumes 'prod' GitHub Environment is configured and has DIGITALOCEAN_ACCESS_TOKEN secret
    env:
      GIT_TAG: ${{ github.ref_name }}
      GHCR_CREDENTIALS: ${{ secrets.GHCR_CREDENTIALS }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      OPENROUTER_ENCRYPTION_KEY: ${{ secrets.OPENROUTER_ENCRYPTION_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print GIT_TAG
        run: echo "GIT_TAG is $GIT_TAG"

      - name: Deploy to DigitalOcean App Platform
        uses: digitalocean/app_action/deploy@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}