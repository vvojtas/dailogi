name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-tests:
    name: Run Tests
    uses: ./.github/workflows/run-tests.yml
    secrets:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      OPENROUTER_ENCRYPTION_KEY: ${{ secrets.OPENROUTER_ENCRYPTION_KEY }}
    with:
      artifact_retention_days: 30
    permissions:
      contents: read

  status-comment:
    name: PR Status Comment
    needs: [run-tests]
    runs-on: ubuntu-latest
    if: ${{ always() && github.event_name == 'pull_request' }}
    
    steps:
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Check job status
        id: check_status
        run: |
          if [[ "${{ needs.run-tests.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Create or update PR comment
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = "${{ steps.check_status.outputs.status }}";
            const emoji = status === "success" ? "✅" : "❌";
            const title = status === "success" ? "All checks passed!" : "Checks failed!";
            
            const backendCoverage = "${{ needs.run-tests.outputs.backend_coverage || 'N/A' }}";
            const frontendCoverage = "${{ needs.run-tests.outputs.frontend_coverage || 'N/A' }}";
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('## PR Check Status')
            );
            
            const body = `## PR Check Status: ${emoji} ${title}
            
            | Check | Status | Coverage |
            | ----- | ------ | -------- |
            | Backend Tests | ${{ needs.run-tests.result == 'success' && '✅ Pass' || '❌ Fail' }} | ${backendCoverage} |
            | Frontend Tests | ${{ needs.run-tests.result == 'success' && '✅ Pass' || '❌ Fail' }} | ${frontendCoverage} |
            | E2E Tests | ${{ needs.run-tests.result == 'success' && '✅ Pass' || '❌ Fail' }} | N/A |
            
            [View workflow run](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            `;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            } 