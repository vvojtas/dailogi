{"openapi":"3.1.0","info":{"title":"d-AI-logi API","description":"API for d-AI-logi - an interactive web application for creating AI dialogues","contact":{"name":"d-AI-logi repo","url":"https://github.com/vvojtas/dailogi"},"version":"v1.0.0"},"servers":[{"url":"https://localhost","description":"Generated server url"}],"tags":[{"name":"Authentication","description":"Authentication management API"},{"name":"Characters","description":"Endpoints for managing characters in the system"},{"name":"LLM","description":"Language Model management endpoints"}],"paths":{"/api/characters/{id}":{"get":{"tags":["Characters"],"summary":"Get character by ID","description":"Retrieves a single character by its ID.\nThe character must either be owned by the current user or be a global character.\nRequires authentication.\n","operationId":"getCharacter","parameters":[{"name":"id","in":"path","description":"ID of the character to retrieve","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"responses":{"200":{"description":"Successfully retrieved character","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CharacterDTO"}}}},"401":{"description":"Unauthorized - user not authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"403":{"description":"Forbidden - user does not have access to this character","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"404":{"description":"Character not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}},"security":[{"bearerAuth":[]}]},"put":{"tags":["Characters"],"summary":"Update an existing character","description":"Updates an existing character with new data.\nThe character must be owned by the current user.\nThe character name must remain unique for the user.\nRequires authentication.\n","operationId":"updateCharacter","parameters":[{"name":"id","in":"path","description":"ID of the character to update. Must be a character owned by the current user.","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateCharacterCommand"}}},"required":true},"responses":{"200":{"description":"Character updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CharacterDTO"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"401":{"description":"Unauthorized - user not authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"403":{"description":"Forbidden - user does not own this character","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"404":{"description":"Character not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"409":{"description":"Character with the same name already exists for this user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Characters"],"summary":"Delete a character","description":"Deletes a character owned by the current user.\nThe character must not be used in any dialogues.\nRequires authentication.\n","operationId":"deleteCharacter","parameters":[{"name":"id","in":"path","description":"ID of the character to delete. Must be a character owned by the current user.","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"responses":{"200":{"description":"Character deleted successfully","content":{"application/json":{"schema":{"type":"string"}}}},"401":{"description":"Unauthorized - user not authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"403":{"description":"Forbidden - user does not own this character","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"404":{"description":"Character not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"409":{"description":"Character is used in dialogues","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}},"security":[{"bearerAuth":[]}]}},"/api/characters":{"get":{"tags":["Characters"],"summary":"Get paginated list of characters","description":"Retrieves a paginated list of characters available to the current user.\nThe list includes user's personal characters and optionally global characters.\nResults are sorted with personal characters first, then global characters, both groups sorted by name.\nRequires authentication.\n","operationId":"getCharacters","parameters":[{"name":"includeGlobal","in":"query","description":"Flag indicating whether to include global characters in the results","required":false,"schema":{"type":"boolean","default":true},"example":true},{"name":"page","in":"query","description":"Page number (0-based). Must be non-negative.","required":false,"schema":{"type":"integer","format":"int32","default":0,"minimum":0},"example":0},{"name":"size","in":"query","description":"Number of items per page. Must be between 1 and 50.","required":false,"schema":{"type":"integer","format":"int32","default":20,"maximum":50,"minimum":1},"example":20}],"responses":{"200":{"description":"Successfully retrieved characters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CharacterListDTO"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"401":{"description":"Unauthorized - user not authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Characters"],"summary":"Create a new character","description":"Creates a new character for the current user.\nThe character name must be unique for the user.\nRequires authentication.\n","operationId":"createCharacter","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCharacterCommand"}}},"required":true},"responses":{"201":{"description":"Character created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CharacterDTO"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"401":{"description":"Unauthorized - user not authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"409":{"description":"Character with the same name already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"422":{"description":"Character limit reached","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}},"security":[{"bearerAuth":[]}]}},"/api/characters/{id}/avatar":{"post":{"tags":["Characters"],"summary":"Upload character avatar","description":"Uploads or replaces the avatar for a character.\nThe character must be owned by the current user.\nOnly PNG files up to 1MB and exactly 256x256 pixels are accepted.\nThe avatar will be returned as a base64-encoded data URL.\nRequires authentication.\n","operationId":"uploadAvatar","parameters":[{"name":"id","in":"path","description":"ID of the character to update avatar for. Must be a character owned by the current user.","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/UploadAvatarCommand"}}}},"responses":{"200":{"description":"Avatar uploaded successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CharacterAvatarResponseDTO"}}}},"400":{"description":"Invalid file format (not PNG), size exceeds 1MB, or dimensions not 256x256 pixels","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"401":{"description":"Unauthorized - user not authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"403":{"description":"Forbidden - user does not own this character","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"404":{"description":"Character not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}},"security":[{"bearerAuth":[]}]}},"/api/auth/register":{"post":{"tags":["Authentication"],"summary":"Register a new user","operationId":"register","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterCommand"}}},"required":true},"responses":{"200":{"description":"User successfully registered","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Invalid input data","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}},"409":{"description":"Username already exists","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}}}},"/api/auth/login":{"post":{"tags":["Authentication"],"summary":"Authenticate user and get JWT token","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginCommand"}}},"required":true},"responses":{"200":{"description":"Authentication successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/JwtResponseDTO"}}}},"400":{"description":"Invalid credentials","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}}}},"/api/llms":{"get":{"tags":["LLM"],"summary":"Get all available LLMs","description":"Retrieves a list of all available Language Models in the system","operationId":"getLLMs","responses":{"200":{"description":"Successfully retrieved list of LLMs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LLMDTO"}}}},"500":{"description":"Internal server error"}}}},"/api/auth/me":{"get":{"tags":["Authentication"],"summary":"Get current user information","operationId":"getCurrentUser","responses":{"200":{"description":"Current user information retrieved","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"401":{"description":"Not authenticated","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorResponseDTO"}}}}},"security":[{"bearerAuth":[]}]}}},"components":{"schemas":{"UpdateCharacterCommand":{"type":"object","description":"Command for updating an existing character","properties":{"name":{"type":"string","description":"Character name","example":"Sherlock Holmes","maxLength":100,"minLength":1},"short_description":{"type":"string","description":"Brief character description","example":"A brilliant detective with exceptional deductive reasoning","maxLength":500,"minLength":0},"description":{"type":"string","description":"Detailed character description","example":"Sherlock Holmes is a fictional detective created by British author Sir Arthur Conan Doyle...","maxLength":5000,"minLength":0},"default_llm_id":{"type":"integer","format":"int64","description":"Default language model ID to use for this character","example":1}},"required":["description","name","short_description"]},"CharacterDTO":{"type":"object","description":"Data Transfer Object for a Character","properties":{"id":{"type":"integer","format":"int64","description":"Unique identifier for the character","example":1},"name":{"type":"string","description":"Name of the character","example":"Sherlock Holmes"},"short_description":{"type":"string","description":"Brief character description","example":"A brilliant detective..."},"description":{"type":"string","description":"Detailed character description","example":"Sherlock Holmes is a fictional detective..."},"has_avatar":{"type":"boolean","description":"Indicates if the character has an avatar","example":true},"avatar_url":{"type":"string","description":"URL of the character's avatar image (null if no avatar)","example":"/api/characters/1/avatar"},"is_global":{"type":"boolean","description":"Indicates if the character is globally available","example":false},"default_llm_id":{"type":"integer","format":"int64","description":"Default language model ID for this character (null if not set)","example":1},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the character was created","example":"2023-10-26T10:15:30+00:00"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the character was last updated (null if never updated)","example":"2023-10-27T11:00:00+00:00"}},"required":["description","has_avatar","id","is_global","name","short_description"]},"ErrorResponseDTO":{"type":"object","description":"Standard error response format","properties":{"message":{"type":"string","description":"Human-readable error message","example":"Validation failed"},"code":{"type":"string","description":"Error code for programmatic handling","example":"VALIDATION_ERROR"},"details":{"type":"object","additionalProperties":{"type":"object"},"description":"Additional error details, specific to the error type (optional)","example":{"page":"must be greater than or equal to 0"}},"timestamp":{"type":"string","format":"date-time","description":"Timestamp when the error occurred","example":"2024-02-20T15:30:45.123Z"}},"required":["code","message"]},"CreateCharacterCommand":{"type":"object","description":"Command for creating a new character","properties":{"name":{"type":"string","description":"Character name","example":"Sherlock Holmes","maxLength":100,"minLength":1},"short_description":{"type":"string","description":"Brief character description","example":"A brilliant detective with exceptional deductive reasoning","maxLength":500,"minLength":0},"description":{"type":"string","description":"Detailed character description","example":"Sherlock Holmes is a fictional detective created by British author Sir Arthur Conan Doyle...","maxLength":5000,"minLength":0},"default_llm_id":{"type":"integer","format":"int64","description":"Default language model ID to use for this character","example":1}},"required":["description","name","short_description"]},"UploadAvatarCommand":{"type":"object","description":"PNG image file to use as avatar. Must be exactly 256x256 pixels and not exceed 1MB.","properties":{"file":{"type":"string","format":"binary","description":"PNG image file to use as avatar. Must be exactly 256x256 pixels and not exceed 1MB."}},"required":["file"]},"CharacterAvatarResponseDTO":{"type":"object","description":"Response confirming character avatar status","properties":{"id":{"type":"integer","format":"int64","description":"Unique identifier for the character","example":1},"has_avatar":{"type":"boolean","description":"Indicates if the character now has an avatar","example":true},"avatar_url":{"type":"string","description":"New URL of the character's avatar image (null if avatar was removed or upload failed)","example":"/api/characters/1/avatar"}},"required":["has_avatar","id"]},"RegisterCommand":{"type":"object","description":"Command for user registration","properties":{"name":{"type":"string","description":"Username","example":"new_user","maxLength":50,"minLength":3},"password":{"type":"string","description":"Password","example":"securePassword123","maxLength":2147483647,"minLength":6},"passwordConfirmation":{"type":"string","description":"Password confirmation","example":"securePassword123","minLength":1}},"required":["name","password","passwordConfirmation"]},"UserDto":{"type":"object","description":"Data Transfer Object for User information","properties":{"id":{"type":"integer","format":"int64","description":"Unique identifier for the user","example":1},"name":{"type":"string","description":"Username","example":"john.doe"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the user was created","example":"2023-10-26T10:15:30+00:00"}},"required":["id","name"]},"LoginCommand":{"type":"object","description":"Command for user login","properties":{"name":{"type":"string","description":"Username","example":"john.doe","minLength":1},"password":{"type":"string","description":"Password","example":"password123","minLength":1}},"required":["name","password"]},"JwtResponseDTO":{"type":"object","description":"Response containing JWT authentication details","properties":{"access_token":{"type":"string","description":"JWT access token","example":"eyJhbGciOiJIUzUxMiJ9..."},"token_type":{"type":"string","description":"Type of the token","example":"Bearer"},"expires_in":{"type":"integer","format":"int64","description":"Token expiration time in seconds","example":3600},"user":{"$ref":"#/components/schemas/UserDto","description":"User details associated with the token"}},"required":["access_token","expires_in","token_type","user"]},"LLMDTO":{"type":"object","description":"Data Transfer Object for a Language Learning Model (LLM)","properties":{"id":{"type":"integer","format":"int64","description":"Unique identifier for the LLM","example":1},"name":{"type":"string","description":"Name of the LLM","example":"GPT-4"},"openrouter_identifier":{"type":"string","description":"Identifier used by OpenRouter for this LLM","example":"openai/gpt-4"}},"required":["id","name","openrouter_identifier"]},"CharacterListDTO":{"type":"object","description":"Paginated list of characters","properties":{"content":{"type":"array","description":"List of characters on the current page","items":{"$ref":"#/components/schemas/CharacterDTO"}},"page":{"type":"integer","format":"int32","description":"Current page number (0-indexed)","example":0},"size":{"type":"integer","format":"int32","description":"Number of characters per page","example":10},"total_elements":{"type":"integer","format":"int64","description":"Total number of characters across all pages","example":100},"total_pages":{"type":"integer","format":"int32","description":"Total number of pages","example":10}},"required":["content","page","size","total_elements","total_pages"]}},"securitySchemes":{"bearerAuth":{"type":"http","description":"JWT token authentication","scheme":"bearer","bearerFormat":"JWT"}}}}